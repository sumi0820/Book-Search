{"version":3,"sources":["Header.js","SearchArea.js","BookCard.js","BookList.js","Books.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","SearchArea","props","onSubmit","searchBooks","action","onChange","handleSearch","type","placeholder","defaultValue","handleSort","disabled","value","BookCard","src","image","alt","title","subtitle","author","published","substring","description","href","previewLink","target","BookList","books","map","book","i","key","volumeInfo","imageLinks","thumbnail","authors","publishedDate","Books","e","preventDefault","request","get","query","q","state","searchField","then","data","console","log","cleanData","setState","sort","body","items","hasOwnProperty","sortedBooks","this","a","b","parseInt","Component","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.907fa64d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return(\n        <header>\n            <i className=\"fas fa-book fa-2x\"></i>\n            <h1>Book Search</h1>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst SearchArea = (props) => {\n    return(\n        <div className=\"search-area\">\n            <form onSubmit={props.searchBooks} action=\"\">\n                <input onChange={props.handleSearch} type=\"text\"  placeholder=\"Title / Author\"/>\n                <button type=\"submit\">Search</button>\n                <select defaultValue=\"Sort\" onChange={props.handleSort}>\n                    <option disabled value=\"Sort\">Sort</option>\n                    <option value=\"Newest\">Newest</option>\n                    <option value=\"Oldest\">Oldest</option>\n                </select>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchArea;","import React from 'react';\n\nconst BookCard = (props) => {\n    return(\n        <div className=\"card-container\">\n            <img src={props.image} alt=\"\"/>\n            <div className=\"desc\">\n                <h2>{props.title} {props.subtitle}</h2>\n                <h3>Author: {props.author}</h3>\n                <h4>Published Date: {props.published === '0000' ? \"Not available\" : props.published.substring(0, 10)}</h4>\n                <p>{props.description}</p>\n                <div className=\"view\">\n                    <a href={props.previewLink} target=\"_blank\" className=\"btn btn-primary badge-dark\">View more</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BookCard;\n","import React from 'react';\nimport BookCard from './BookCard';\n\nconst BookList = (props) => {\n    return(\n        <div className=\"list\">\n            {\n                props.books.map((book, i) => {\n                    return <BookCard \n                            key={i}\n                            image={book.volumeInfo.imageLinks.thumbnail}\n                            title={book.volumeInfo.title}\n                            subtitle={book.volumeInfo.subtitle}\n                            author={book.volumeInfo.authors}\n                            published={book.volumeInfo.publishedDate}\n                            description={book.volumeInfo.description}\n                            previewLink={book.volumeInfo.previewLink}\n                           />\n                })\n            }\n\n        </div>\n    )\n}\n\nexport default BookList;","import React, { Component } from 'react';\nimport SearchArea from './SearchArea';\nimport request from 'superagent';\nimport BookList from './BookList';\n\n\nclass Books extends Component {\n\n    //Create state\n    constructor(props){\n        super(props);\n        this.state = {\n            books: [],\n            searchField: '',\n            sort: ''\n        }\n    }\n\n    //Fetch data from API\n    searchBooks = (e) => {\n        e.preventDefault();\n        request\n            .get(\"https://www.googleapis.com/books/v1/volumes/\")\n            .query({ q: this.state.searchField })\n            .query('&maxResults=40')\n            .then((data) => {\n                console.log(data);\n                const cleanData = this.cleanData(data);\n                this.setState({ books: cleanData });\n            })            \n    }\n\n\n    //Create search handler\n    handleSearch = (e) => {\n        this.setState({ searchField: e.target.value })\n    }\n\n    //Sort out handler\n    handleSort = (e) => {\n        this.setState({ sort: e.target.value })\n    }\n\n    //Clean up data\n    cleanData = (data) => {\n        const cleanData = data.body.items.map((book) => {\n            if(book.volumeInfo.hasOwnProperty('publishedDate') === false){\n                book.volumeInfo['publishedDate'] = '0000';\n            }\n            else if(book.volumeInfo.hasOwnProperty('imageLinks') === false){\n                book.volumeInfo['imageLinks'] = { thumbnail: 'https://icon-library.net/images/no-photo-icon/no-photo-icon-5.jpg'}\n            }\n        return book;\n        })\n    return cleanData;   \n    }\n\n\n    //Pass \"handleSearch\" to <SearchArea> component\n\trender() {  \n        const sortedBooks = this.state.books.sort((a, b) => {\n            if(this.state.sort === 'Newest') {\n                    return parseInt(b.volumeInfo.publishedDate.substring(0,4)) - parseInt(a.volumeInfo.publishedDate.substring(0,4))\n            }\n            else if(this.state.sort === 'Oldest'){\n                    return parseInt(a.volumeInfo.publishedDate.substring(0,4)) - parseInt(b.volumeInfo.publishedDate.substring(0,4))\n            }\n        })\n\n\t\treturn (\n\t\t    <div >\n                <SearchArea searchBooks={this.searchBooks} handleSearch={this.handleSearch} handleSort={this.handleSort}/>\n                <BookList books={sortedBooks} />\n\n\t\t    </div>\n\t\t  );\n\t\t}\n\t}\n\nexport default Books;\n","import React from 'react';\n\nconst Footer = () => {\n    return(\n        <footer>\n            <p className=\"comment\">made with React</p>\n        </footer>\n    )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Books from './Books';\nimport Footer from './Footer';\nimport './App.css';\n\nclass App extends Component {\n\trender() {  \n\t\treturn (\n\t\t    <div className=\"App\">\n\t\t\t\t\t<Header />\n          <Books />\n          <Footer />\n\t\t    </div>\n\t\t  );\n\t\t}\n\t}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}